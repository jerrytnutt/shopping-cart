{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerry\\\\Documents\\\\webdev\\\\shopping\\\\shopping-cart\\\\src\\\\components\\\\cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  let handleChange = () => {\n    console.log(6);\n  };\n\n  const increase = item => {\n    item = JSON.parse(item.target.value);\n    let newObject = Object.assign({}, item);\n    newObject.quantity += 1;\n    console.log(item.quantity);\n    return props.changecartArray(item);\n  };\n\n  const decrease = item => {\n    item = JSON.parse(item.target.value);\n\n    if (item.quantity === 1) {\n      return 0;\n    }\n\n    item.quantity -= 1;\n    return props.changecartArray(item);\n  };\n\n  useEffect(() => {\n    let newTotal = props.cartArray.reduce((accumulator, currentValue) => accumulator + parseInt(currentValue.price) * currentValue.quantity, 0);\n    return props.updatetotalPrice(newTotal);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cartContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.totalPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), props.cartArray.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.img,\n          alt: \"new\",\n          id: card.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cartDescription\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: [\"Qantity: \", card.quantity, \" $\", card.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputArea\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            value: JSON.stringify(card),\n            onClick: decrease,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text\",\n            children: card.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            value: JSON.stringify(card),\n            onClick: increase,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Cart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/jerry/Documents/webdev/shopping/shopping-cart/src/components/cart.js"],"names":["React","useState","useEffect","Cart","props","handleChange","console","log","increase","item","JSON","parse","target","value","newObject","Object","assign","quantity","changecartArray","decrease","newTotal","cartArray","reduce","accumulator","currentValue","parseInt","price","updatetotalPrice","totalPrice","map","card","img","id","name","stringify"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nconst Cart = (props) => {\r\n  let handleChange = () => {\r\n    console.log(6)\r\n  }\r\n  \r\nconst increase = (item) => {\r\n  item = JSON.parse(item.target.value)\r\n  let newObject = Object.assign({}, item);\r\n  newObject.quantity += 1\r\n  console.log(item.quantity)\r\n  return props.changecartArray(item)\r\n}\r\nconst decrease = (item) => {\r\n  item = JSON.parse(item.target.value)\r\n  if (item.quantity === 1){\r\n    return 0\r\n  }\r\n  item.quantity -= 1\r\n  return props.changecartArray(item)\r\n}\r\n  \r\n  useEffect(() => {\r\n    let newTotal = props.cartArray.reduce( \r\n      ( accumulator, currentValue ) => \r\n      accumulator + (parseInt(currentValue.price) * currentValue.quantity), 0 )\r\n    return props.updatetotalPrice(newTotal)\r\n  });\r\n\r\n    return (\r\n      \r\n      <div className='cartContainer'>\r\n        <h1>{props.totalPrice}</h1>\r\n        \r\n        \r\n      {props.cartArray.map((card) => \r\n      \r\n    <div className='row' key={card.id}> \r\n    <div className='imageContainer'>\r\n    <img src={card.img} alt='new' id={card.id}></img> \r\n    </div>\r\n    <div className='cartDescription'>\r\n    <p className='text'>{card.name}</p>\r\n    <p className='text'>Qantity: {card.quantity} ${card.price}</p>\r\n    <div className='inputArea'>\r\n\r\n    <button value={JSON.stringify(card)} onClick={decrease}>-</button>\r\n    <p className='text'>{card.quantity}</p>\r\n    <button value={JSON.stringify(card)} onClick={increase}>+</button>\r\n\r\n   </div>\r\n   \r\n    </div>\r\n    \r\n    \r\n    \r\n    </div>\r\n      ) \r\n      }\r\n      \r\n      </div>\r\n          \r\n         \r\n     \r\n    );\r\n  }\r\n  export default Cart;\r\n  "]},"metadata":{},"sourceType":"module"}