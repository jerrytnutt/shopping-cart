{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerry\\\\Documents\\\\webdev\\\\shopping\\\\shopping-cart\\\\src\\\\components\\\\cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [totalPrice, updatetotalPrice] = useState(0);\n\n  const increaseQuantity = (e, incrementer) => {\n    console.log(e.target.value);\n  };\n\n  const changeQuantity = (item, incrementer) => {\n    item = JSON.parse(item.target.value);\n\n    if (item.quantity === 1 && incrementer === -1) {\n      return props.removeCartItem(item);\n    }\n\n    let newObject = Object.assign({}, item);\n    newObject.quantity = newObject.quantity + incrementer;\n    return props.changecartArray(newObject);\n  };\n\n  useEffect(() => {\n    let newTotal = props.cartArray.reduce((accumulator, currentValue) => accumulator + parseInt(currentValue.price) * currentValue.quantity, 0);\n    return updatetotalPrice(newTotal);\n  }, [totalPrice, props.cartArray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cartContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Total Price: $\", totalPrice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), props.cartArray.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.img,\n          alt: \"new\",\n          id: card.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cartDescription\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: [\"Qantity: \", card.quantity, \" Cost: $\", card.price * card.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputArea\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            value: JSON.stringify(card),\n            onClick: e => changeQuantity(e, 1),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"qtext\",\n            children: card.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            value: JSON.stringify(card),\n            onClick: e => changeQuantity(e, 1),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 10\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Cart, \"d7cVoDYgCBm9bcrEygcd05ZVG1k=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/jerry/Documents/webdev/shopping/shopping-cart/src/components/cart.js"],"names":["React","useState","useEffect","Cart","props","totalPrice","updatetotalPrice","increaseQuantity","e","incrementer","console","log","target","value","changeQuantity","item","JSON","parse","quantity","removeCartItem","newObject","Object","assign","changecartArray","newTotal","cartArray","reduce","accumulator","currentValue","parseInt","price","map","card","img","id","name","stringify"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\r\n\r\nconst Cart = (props) => {\r\n  const [totalPrice, updatetotalPrice] = useState(0)\r\n  \r\n  const increaseQuantity = (e,incrementer) => {\r\n    console.log(e.target.value)\r\n    \r\n  }\r\n  const changeQuantity = (item,incrementer) => {\r\n    item = JSON.parse(item.target.value)\r\n    if (item.quantity === 1 && incrementer === -1){\r\n      return props.removeCartItem(item)\r\n  }\r\n    let newObject = Object.assign({}, item);\r\n    newObject.quantity = newObject.quantity + incrementer\r\n    return props.changecartArray(newObject)\r\n}\r\n  \r\n  useEffect(() => {\r\n    \r\n     \r\n   let newTotal = props.cartArray.reduce( \r\n      ( accumulator, currentValue ) => \r\n      accumulator + (parseInt(currentValue.price) * currentValue.quantity), 0 )\r\n      return updatetotalPrice(newTotal)\r\n    \r\n  },[totalPrice,props.cartArray]);\r\n\r\n    return (\r\n      <div className='cartContainer'>\r\n        <h1>Total Price: ${totalPrice}</h1>\r\n        {props.cartArray.map((card) => \r\n      \r\n         <div className='row' key={card.id}> \r\n         <div className='imageContainer'>\r\n         <img src={card.img} alt='new' id={card.id}></img> \r\n         </div>\r\n         <div className='cartDescription'>\r\n         <p className='text'>{card.name}</p>\r\n         <p className='text'>Qantity: {card.quantity} Cost: ${card.price * card.quantity}</p>\r\n         <div className='inputArea'>\r\n\r\n    <button value={JSON.stringify(card)} onClick={(e) => changeQuantity (e,1)}>-</button>\r\n    <div className='qtext'>{card.quantity}</div>\r\n    <button value={JSON.stringify(card)} onClick={(e) => changeQuantity (e,1)}>+</button>\r\n\r\n   </div>\r\n   \r\n    </div>\r\n    \r\n    \r\n    \r\n    </div>\r\n      ) \r\n      }\r\n      \r\n      </div>\r\n          \r\n         \r\n     \r\n    );\r\n  }\r\n  export default Cart;\r\n  "]},"metadata":{},"sourceType":"module"}